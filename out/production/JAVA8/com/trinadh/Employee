//Find Employees with same salary using java 8 features.
package com.example.java8features;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.stream.Collectors;

public class EmployeeStreamExample {
    public static void main(String[] args) {
        //Employee emp = new Employee(40750,"Trinadh",99);
        //System.out.println(emp);

        List<Employee> employees = new ArrayList<>();

        employees.add(new Employee(1,"kiran",90));
        employees.add(new Employee(2,"rakesh",92));
        employees.add(new Employee(3,"Zannath",92));
        employees.add(new Employee(4,"Shaida",50));

        int listSize = employees.size();
        for(int i = 0; i < listSize;i++){
            //if(employees.get(i).getSalary() == 92)
            System.out.println("id : " + employees.get(i).getId() + " Name : " + employees.get(i).getName() + " Salary : " + employees.get(i).getSalary());
        }

        Map<Integer, Set<String>> map3 = employees.stream().collect(Collectors.groupingBy(Employee::getSalary,Collectors.mapping(Employee :: getName, Collectors.toSet())));
        System.out.println("map3 : " + map3);

        map3.entrySet().stream().filter(e -> e.getValue().size() > 1)
                .forEach((e) -> System.out.println("Salary :: " + e.getKey() + " is same for " + e.getValue()));
    }
}


package com.example.java8features;

public class Employee {
    public Employee(int id, String name, int salary){
        this.id = id;
        this.name = name;
        this.salary = salary;
    }

    private int id;
    private String name;
    private int salary;

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getSalary() {
        return salary;
    }

    public void setSalary(int salary) {
        this.salary = salary;
    }
}
